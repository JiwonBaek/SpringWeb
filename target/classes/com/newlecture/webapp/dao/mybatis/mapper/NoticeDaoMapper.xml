<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

		<mapper namespace="com.newlecture.webapp.dao.NoticeDao">
		
		<!-- 사용 할 함수를 id에 입력 어떤 쿼리문을 사용할 지에 따라 select, delete, update등으로 id를 만든다. -->
		<!-- resultType은 반환 값을 저장할 값 타입이나 공간 설정 -->
		  <select id="get" resultType="com.newlecture.webapp.entity.NoticeView"> 
		    select * from Notice where id=#{id}
		  </select>
		  
		<!--   mybatis는 하나의 인자만 값을 넘겨 받을 수 있다.  -->
		  <select id="getList" resultType="com.newlecture.webapp.entity.NoticeView"> 
		      select * from NoticeView where ${param2} like '%${param3}%' order by regDate desc limit ${(page-1)*10}, 10
		  </select>
		  
		    <select id="getPrev" resultType="com.newlecture.webapp.entity.NoticeView"> 
		     select * from NoticeView where id &lt; CAST(#{id} AS UNSIGNED)order by regDate desc limit 1	    
		  </select>
		  
		   <select id="getNext" resultType="com.newlecture.webapp.entity.NoticeView"> 
		     select * from NoticeView where id &gt; CAST(#{id} AS UNSIGNED)order by regDate asc limit 1	    
		  </select>
		  
		    <select id="getNextId" resultType="String"> 
		     select ifnull(max(cast(id as unsigned)),0)+1 from Notice
		  </select>
		  
		  
		  <insert id="insert" parameterType="com.newlecture.webapp.entity.Notice">
		  
		  <selectKey order="BEFORE" keyProperty="id" resultType="String">
		   select ifnull(max(cast(id as unsigned)),0)+1 from Notice
		  </selectKey>
		  
		  insert into Notice(id,title,content,writerId) values(#{id},#{title},#{content},#{writerId})
		  </insert>
		  
		
		</mapper> 